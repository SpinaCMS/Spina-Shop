%tr
  %td
    = link_to spina.shop_admin_invoice_path(invoice, format: :pdf) do
      = Spina::Shop::InvoicePresenter.new(invoice, self).invoice_name
  %td=l invoice.date, format: '%d-%m-%Y'
  %td.nowrap
    - if !invoice.paid? && invoice.order.credit_invoice.present?
      = link_to spina.mark_as_paid_shop_admin_invoice_path(invoice), class: 'button button-mini button-primary', data: {method: :post, confirm: t('spina.shop.invoices.mark_as_paid_confirmation_html')} do
        %i.icon.icon-check{style: "margin-right: 4px"}
        = t('spina.shop.invoices.mark_as_paid')

    - unless invoice.credit?
      - if invoice.order.payment_reminder_sent_at.present?
        =l invoice.order.payment_reminder_sent_at, format: '%d-%m-%Y'
      - elsif !invoice.paid?
        = link_to spina.shop_admin_order_payment_reminder_path(invoice.order), class: 'button button-mini', data: {method: :post, confirm: t('spina.shop.orders.payment_reminders.send_confirmation_html')} do
          %i.icon.icon-mail{style: 'margin-right: 4px'}
          = Spina::Shop::Order.human_attribute_name(:payment_reminder_sent_at)
  %td
    = link_to invoice.receiver, spina.shop_admin_customer_path(invoice.customer)
    - if invoice.order.present?
      %small
        = Spina::Shop::Order.model_name.human
        = link_to invoice.order.number, spina.shop_admin_order_path(invoice.order)
  %td.text-right= number_to_currency invoice.total
  %td.text-right
    - case invoice.status
    - when "paid"
      .status-dot.status-dot-success{data: {tooltip: "Betaald"}} 
    - when "outstanding"
      .status-dot.status-dot-warning{data: {tooltip: "Openstaand"}}
    - when "overdue"
      .status-dot.status-dot-danger{data: {tooltip: "Verlopen"}}
