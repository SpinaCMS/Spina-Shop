%header#header
  .breadcrumbs= render_breadcrumbs separator: '<div class="divider"></div>'

- if @product.recounts.any?
  %h2{style: "margin-top: 30px"} Laatste 5 hertellingen

  .table-container
    %table.table
      %thead
        %tr 
          %th Verschil
          %th= Spina::Shop::Recount.human_attribute_name(:actor)
          %th= Spina::Shop::Recount.human_attribute_name(:created_at)
      %tbody
        - @product.recounts.limit(5).order(created_at: :desc).each do |recount|
          %tr
            %td= recount.difference
            %td= recount.actor
            %td=l recount.created_at, format: :long

- if @product.stock_orders.open.any?
  %h2{style: "margin-top: 30px"} Leveringsorders

  .table-container
    %table.table
      %thead
        %tr
          %th= Spina::Shop::OrderedStock.human_attribute_name(:quantity)
          %th= Spina::Shop::OrderedStock.human_attribute_name(:received)
          %th= Spina::Shop::StockOrder.model_name.human
          %th= Spina::Shop::StockOrder.human_attribute_name(:ordered_at)
          %th= Spina::Shop::StockOrder.human_attribute_name(:expected_delivery)

      %tbody
        - @product.ordered_stock.joins(:stock_order).where(spina_shop_stock_orders: {closed_at: nil}).each do |ordered|
          %tr
            %td= ordered.quantity
            %td= ordered.received
            %td= link_to "Leveringsorder ##{ordered.stock_order.id}", spina.shop_admin_stock_order_path(ordered.stock_order), class: 'table-link'
            %td
              - if ordered.stock_order.ordered_at.present?
                =l ordered.stock_order.ordered_at, format: '%d %B %Y'
            %td
              - if ordered.stock_order.expected_delivery.present?
                =l ordered.stock_order.expected_delivery, format: '%d %B %Y'

%h2{style: "margin-top: 30px"} Historie

.table-container
  %table.table
    %thead
      %tr
        %th= Spina::Shop::StockLevelAdjustment.human_attribute_name(:adjustment)
        %th= Spina::Shop::StockLevelAdjustment.human_attribute_name(:category)
        %th= Spina::Shop::StockLevelAdjustment.human_attribute_name(:note)
        %th= Spina::Shop::StockLevelAdjustment.human_attribute_name(:created_at)
        %th= Spina::Shop::StockLevelAdjustment.human_attribute_name(:actor)
        - if @product.can_expire?
          %th.text-right= Spina::Shop::StockLevelAdjustment.human_attribute_name(:expiration_date)

    %tbody
      - @stock_level_adjustments.order(created_at: :desc).each do |adjustment|
        %tr
          %td
            - if adjustment.adjustment > 0
              .text-success= adjustment.adjustment
            - else
              .text-danger= adjustment.adjustment

          %td
            - if adjustment.category.present?
              =t "spina.shop.stock_level_adjustments.categories.#{adjustment.category}"
          %td= adjustment.description
          %td=l adjustment.created_at, format: "%d-%m-%Y"
          %td= adjustment.actor

          - if @product.can_expire?
            %td.text-muted.text-right= adjustment.expiration_date if adjustment.adjustment > 0