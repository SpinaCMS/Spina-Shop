%header#header
  .breadcrumbs
    .pull-right{style: "height: 0px"}
      = link_to spina.new_by_category_shop_admin_products_path, class: 'button button-mini icon-only', data: {remote: true} do
        %i.icon.icon-plus{style: 'vertical-align: bottom'}
    = render_breadcrumbs separator: '<div class="divider"></div>'

  %nav#secondary
    %ul
      %li.active
        = link_to spina.shop_admin_products_path do
          =t 'spina.shop.products.title'

      %li
        = link_to spina.shop_admin_product_bundles_path do
          = Spina::Shop::ProductBundle.model_name.human count: 2

= search_form_for @q, url: spina.shop_admin_products_path, html: {class: 'filter-form'} do |f|
  .filter-form-simple
    .filter-form-input
      = f.text_field :sku_or_translations_name_cont, style: 'box-sizing: border-box', placeholder: 'Filter op naam of SKU'
      = link_to 'geavanceerd', '#', class: 'filter-form-advanced-link'

    = button_tag type: :submit, class: 'button button-primary icon-only' do
      = icon('search')

  .filter-form-advanced
    .filter-form-advanced-group
      .filter-form-label
        ID

      .filter-form-control
        .input-group
          = f.text_field :id_gteq, placeholder: 'min'
          = f.text_field :id_lteq, placeholder: 'max'

    - @product_category_properties.each do |property|
      .filter-form-advanced-group
        .filter-form-label
          = property.label
        .filter-form-control
          - if property.field_type == 'select'
            - options = options_for_select(property.property_options.map{|option| [option.label, option.name]}, params[:filters].try(:[], property.name))
            = select_tag "filters[#{property.name}]", options, class: 'select2', style: 'width: 100%', multiple: true
          - else
            .input-group
              = number_field_tag "filters[#{property.name}][min]", params[:filters].try(:[], property.name).try(:[], 'min'), placeholder: 'min'
              = number_field_tag "filters[#{property.name}][max]", params[:filters].try(:[], property.name).try(:[], 'max'), placeholder: 'max'

.table-container.infinite-table
  %table.table.table-clickable
    %thead
      %tr
        %th
        %th= sort_link [:spina, @q], :translations_name, Spina::Shop::Product.human_attribute_name(:name), {}, class: 'table-sort'
        %th{style: 'text-align: right'}= sort_link [:spina, @q], :price, Spina::Shop::Product.human_attribute_name(:price), {}, class: 'table-sort'
        %th{style: 'text-align: right'}= sort_link [:spina, @q], :location, Spina::Shop::Product.human_attribute_name(:location), {}, class: 'table-sort'
        %th{style: 'text-align: right'}= sort_link [:spina, @q], :stock_level, Spina::Shop::Product.human_attribute_name(:stock_level), {}, class: 'table-sort'
        %th.align-right= sort_link [:spina, @q], :expiration_date, Spina::Shop::Product.human_attribute_name(:expiration_date), {}, class: 'table-sort'
        %th

    %tbody
      = render partial: "product", collection: @products

  .pagination= link_to_next_page @products, 'Next'
