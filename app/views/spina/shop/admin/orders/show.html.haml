%header#header
  .pull-right
    - if @order.order_attachments.any?
      %div{style: 'display: inline-block', data: {dropdown: true}}
        = link_to '#', class: 'button', data: {trigger: 'dropdown', target: '#attachments'} do
          = Spina::Shop::Order.human_attribute_name(:order_attachments)
          %i.icon.icon-caret-down{style: 'margin-right: 0'}

        %ul#attachments.align-right
          - @order.order_attachments.each do |order_attachment|
            %li
              = link_to attachment_url(order_attachment, :attachment), target: :blank do
                = order_attachment.name
                %br/
                %small.text-muted
                  .pull-right= number_to_human_size order_attachment.attachment_size
                  = order_attachment.attachment_content_type

    = link_to t('spina.edit'), spina.edit_shop_admin_order_path(@order), class: 'button'

    - if @order.in_state?(:confirming, :received)
      = link_to t('spina.shop.orders.cancel_order_html'), spina.cancel_shop_admin_order_path(@order), method: :post, class: 'button', data: {confirm: t('spina.shop.orders.cancel_order_confirmation_html')}

      - if @order.in_state?(:confirming)
        = link_to t('spina.shop.orders.receive_order_html'), spina.receive_shop_admin_order_path(@order), method: :post, class: 'button button-primary', data: {confirm: t('spina.shop.orders.receive_order_confirmation_html')}

      - if @order.in_state?(:received)
        = link_to t('spina.shop.orders.pay_order_html'), spina.pay_shop_admin_order_path(@order), method: :post, class: 'button button-primary', data: {confirm: t('spina.shop.orders.pay_order_confirmation_html')}

    - if @order.in_state?(:paid)
      = link_to t('spina.shop.orders.start_preparing_html'), spina.shop_admin_order_packing_slip_path(@order), method: :post, class: 'button button-primary'

    - if @order.in_state?(:preparing)
      - if @order.requires_shipping?
        = link_to t('spina.shop.orders.ship_order_html'), spina.shop_admin_order_shipping_label_path(@order), method: :post, class: 'button button-primary', data: {confirm: t('spina.shop.orders.ship_order_confirmation_html')}
      - else
        = link_to t('spina.shop.orders.order_picked_up'), spina.order_picked_up_shop_admin_order_path(@order), method: :post, class: 'button button-primary'

    - if @order.in_state?(:shipped)
      = link_to t('spina.shop.orders.states.delivered'), spina.delivered_shop_admin_order_path(@order), method: :post, class: 'button button-primary'

  .breadcrumbs= render_breadcrumbs separator: '<div class="divider"></div>'

  %nav#secondary.tabs
    %ul
      %li.active
        = link_to '#order' do
          = Spina::Shop::Order.model_name.human
      %li
        = link_to '#history' do
          =t 'spina.shop.orders.history'

.tab-content.active#order

  .wizard-steps
    - if @order.cancelled?
      .wizard-step.error
        .wizard-step-circle
          .wizard-step-label=t 'spina.shop.orders.states.cancelled'
        .wizard-step-connector

    - elsif @order.failed?
      .wizard-step.error
        .wizard-step-circle
          .wizard-step-label=t 'spina.shop.orders.states.failed'
        .wizard-step-connector

    - else
      .wizard-step{class: ('done' if @order.received?)}
        .wizard-step-circle
          = icon("shop")
          .wizard-step-label=t 'spina.shop.orders.states.received'
        .wizard-step-connector

    - if @order.received? && @order.failed?
      .wizard-step.error
        .wizard-step-circle
          .wizard-step-label=t 'spina.shop.orders.states.failed'
        .wizard-step-connector

    - else
      .wizard-step{class: ('done' if @order.paid?)}
        .wizard-step-circle
          = icon("mail")
          .wizard-step-label=t 'spina.shop.orders.states.paid'
        .wizard-step-connector

    - unless @order.pos?
      .wizard-step{class: ('done' if @order.order_prepared_at.present?)}
        .wizard-step-circle
          = icon("dots")
          .wizard-step-label=t 'spina.shop.orders.states.order_preparing'
        .wizard-step-connector

    - if @order.requires_shipping?
      .wizard-step{class: ('done' if @order.shipped_at.present?)}
        .wizard-step-circle
          = icon("mail")
          .wizard-step-label{style: 'white-space: nowrap'}=t 'spina.shop.orders.states.shipped'
        .wizard-step-connector

      .wizard-step{class: ('done' if @order.delivered_at.present?)}
        .wizard-step-circle
          = icon("home")
          .wizard-step-label=t 'spina.shop.orders.states.delivered'
        .wizard-step-connector

    - else
      .wizard-step{class: ('done' if @order.picked_up_at.present?)}
        .wizard-step-circle
          = icon("shop")
          .wizard-step-label=t 'spina.shop.orders.states.picked_up'
        .wizard-step-connector

  .divider-container
    %hr.divider/

  .information-tables
    .information-table
      %table
        - if @order.billing_name.present?
          %tr
            %th= Spina::Shop::Order.human_attribute_name(:billing_name)
            %td
              - if @order.customer
                = link_to @order.billing_name, spina.shop_admin_customer_path(@order.customer)
              - else
                = @order.billing_name
        - if @order.email.present?
          %tr
            %th= Spina::Shop::Order.human_attribute_name(:email)
            %td
              = link_to @order.email, @order.email

        - if @order.phone.present?
          %tr
            %th= Spina::Shop::Order.human_attribute_name(:phone)
            %td= @order.phone

        - if @order.received_at.present?
          %tr
            %th= Spina::Shop::Order.human_attribute_name(:received_at)
            %td
              =l @order.received_at, format: '%d %B %Y'
              %br/
              =l @order.received_at, format: '%H:%M'
              %small.text-muted=l @order.received_at, format: '%Z'

        - if @order.ip_address.present?
          %tr
            %th= Spina::Shop::Order.human_attribute_name(:ip_address)
            %td
              = @order.ip_address

    .information-table
      %table
        - if @order.invoices.any?
          %tr
            %th= Spina::Shop::Invoice.model_name.human count: @order.invoices.count
            %td
              - @order.invoices.each do |invoice|
                = link_to invoice.invoice_number, spina.shop_admin_invoice_path(invoice, format: :pdf)

        %tr
          %th= Spina::Shop::Order.human_attribute_name(:billing_address)
          %td
            = @order.billing_name
            %br/
            = [@order.billing_street1.presence, @order.billing_street2.presence].compact.join('<br />').html_safe
            = "#{@order.billing_house_number}#{@order.billing_house_number_addition}"
            %br/
            = [@order.billing_postal_code, @order.billing_city].join(', ')
            %br/
            = @order.billing_country.name

        - if @order.gift_card.present?
          %tr
            %th= Spina::Shop::Order.human_attribute_name(:gift_card)
            %td
              = @order.gift_card.readable_code
              %br/
              = number_to_currency @order.gift_card_amount

        - if @order.payment_method.present?    
          %tr
            %th= Spina::Shop::Order.human_attribute_name(:payment_method)
            %td 
              =t "spina.shop.orders.payment_methods.#{@order.payment_method}"
              - if @order.paid_at.present?
                %br/
                =l @order.paid_at, format: "%d %B %Y"
                %br/
                =l @order.paid_at, format: "%H:%M"
                %small.text-muted=l @order.paid_at, format: '%Z'

        - if @order.cancelled_at.present?
          %tr
            %th=t 'spina.shop.orders.states.cancelled'
            %td
              =l @order.cancelled_at, format: "%d %B %Y"
              %br/
              =l @order.cancelled_at, format: "%H:%M"
              %small.text-muted=l @order.cancelled_at, format: '%Z'

        - if @order.failed_at.present?
          %tr
            %th=t 'spina.shop.orders.states.failed'
            %td
              =l @order.failed_at, format: "%d %B %Y"
              %br/
              =l @order.failed_at, format: "%H:%M"
              %small.text-muted=l @order.failed_at, format: '%Z'

    .information-table
      %table
        - if @order.discount.present?
          %tr
            %th= Spina::Shop::Order.human_attribute_name(:discount)
            %td
              = @order.discount.description
          %tr
            %th= Spina::Shop::Discount.human_attribute_name(:code)
            %td= @order.discount.code

        %tr
          %th= Spina::Shop::Order.human_attribute_name(:delivery_address)
          %td 
            = @order.delivery_name
            %br/
            = @order.delivery_address
            %br/
            = [@order.delivery_postal_code, @order.delivery_city].join(', ')

        - if @order.delivery_tracking_ids.present?
          %tr
            %th= Spina::Shop::Order.human_attribute_name(:delivery_tracking_ids)
            %td= @order.delivery_tracking_ids.join("<br />").html_safe

        %tr
          %th= Spina::Shop::Order.human_attribute_name(:weight)
          %td
            = @order.total_weight
            gr

        - if @order.shipped_at.present?
          %tr
            %th= Spina::Shop::Order.human_attribute_name(:shipped_at)
            %td=l @order.shipped_at, format: "%d %B %Y"

        - if @order.delivered_at.present?
          %tr
            %th= Spina::Shop::Order.human_attribute_name(:delivered_at)
            %td=l @order.delivered_at, format: "%d %B %Y"

  .divider-container
    %hr.divider/

  - if @order.note.present?
    %label= Spina::Shop::Order.human_attribute_name(:note)
    = preserve "<p style='white-space: pre'>#{@order.note}</p>".html_safe
    .divider-container
      %hr.divider/

  .table-container
    %table.table
      %thead
        %tr
          %th.text-right 
          %th= Spina::Shop::Product.model_name.human
          %th.text-right= Spina::Shop::OrderItem.human_attribute_name(:price)
          %th.text-right= Spina::Shop::OrderItem.human_attribute_name(:total)
          - if @order.building?
            %th

      %tbody
        - @order.order_items.includes(:orderable).each do |order_item|
          %tr
            %td.text-right= "#{order_item.quantity} &times;".html_safe
            %td
              = link_to order_item.description, spina.shop_admin_product_path(order_item.orderable), class: 'table-link'
            %td.text-right= number_to_currency order_item.unit_price
            %td.text-right
              - if order_item.discount_amount > 0
                .text-muted{style: 'text-decoration: line-through'}= number_to_currency order_item.total_without_discount

              = number_to_currency order_item.total
            - if @order.building?
              %td{style: 'width: 32px'}
                = link_to spina.shop_admin_order_order_item_path(@order, order_item), class: 'button button-link button-mini icon-only', data: {method: :delete} do
                  = icon('trash')

        - if @order.building?
          %tr
            %td{colspan: 5}
              = link_to spina.new_shop_admin_order_order_item_path(@order), class: 'button button-link button-block text-center button-mini table-link', data: {remote: true} do
                = icon('plus')
                =t 'spina.shop.orders.add_product'

        %tr
          %td.text-right{colspan: 4}
            %strong{style: 'margin-right: 12px'}= Spina::Shop::Order.human_attribute_name(:order_total)
            = number_to_currency @order.order_total
          - if @order.building?
            %td

        %tr
          %td.text-right{colspan: 4}
            %strong{style: 'margin-right: 12px'}= Spina::Shop::Order.human_attribute_name(:delivery_price)
            = number_to_currency @order.delivery_price
          - if @order.building?
            %td

        %tr
          %td.text-right{colspan: 4}
            %strong{style: 'margin-right: 12px'}= Spina::Shop::Order.human_attribute_name(:total)
            = number_to_currency @order.total
          - if @order.building?
            %td

.tab-content#history
  .table-container
    %table.table
      %tr
        %th= t("spina.shop.orders.states.building")
        %td=l @order.created_at, format: :long
        %td.text-right= @order.billing_name
        %td.text-muted.text-right= @order.ip_address

      - @order.order_transitions.each do |transition|
        %tr
          %th= t("spina.shop.orders.states.#{transition.to_state}")
          %td=l transition.created_at, format: :long

          - if transition.metadata.present?
            %td.text-right= transition.metadata["user"]
            %td.text-muted.text-right= transition.metadata['ip_address']
          - else
            %td{colspan: 2}
