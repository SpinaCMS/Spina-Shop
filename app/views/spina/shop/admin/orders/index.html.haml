%header#header
  .breadcrumbs
    = render_breadcrumbs separator: '<div class="divider"></div>'
    = link_to spina.new_shop_admin_order_path, class: 'button button-mini icon-only' do
      %i.icon.icon-plus{style: 'vertical-align: bottom'}

  %nav#secondary
    %ul
      %li{class: ('active' if action_name == 'index')}
        = link_to t('spina.shop.orders.title'), spina.shop_admin_orders_path
      %li{class: ('active' if action_name == 'concepts')}
        = link_to t('spina.shop.orders.concepts'), spina.concepts_shop_admin_orders_path
      %li{class: ('active' if action_name == 'to_process')}
        = link_to t('spina.shop.orders.to_process'), spina.to_process_shop_admin_orders_path
      %li{class: ('active' if action_name == 'ready_for_pickup_orders')}
        = link_to t('spina.shop.orders.states.ready_for_pickup'), spina.ready_for_pickup_orders_shop_admin_orders_path
      %li{class: ('active' if action_name == 'failed')}
        = link_to t('spina.shop.orders.failed'), spina.failed_shop_admin_orders_path

= form_with url: '', method: :get, local: true, html: {class: 'filter-form'} do |f|
  .filter-form-simple
    .filter-form-input
      = f.text_field :search, value: params[:search], placeholder: t('spina.search')
      = link_to 'geavanceerd', '#', class: 'filter-form-advanced-link'

    = button_tag type: :submit, class: 'button button-primary icon-only' do
      = icon('search')

  .filter-form-advanced{style: ("display: block" if @advanced_filter)}
    = f.fields_for :advanced_filters do |ff|
      .filter-form-advanced-group
        .filter-form-label= Spina::Shop::Store.human_attribute_name(:store)

        .filter-form-control
          .input-group
            .select-dropdown= ff.select :store_id, options_for_select(Spina::Shop::Store.pluck(:name, :id), params.dig(:advanced_filters, :store_id)), {include_blank: t("spina.shop.orders.all_stores")}, class: '', style: 'width: 100%'
            
            
      .filter-form-advanced-group
        .filter-form-label= Spina::Shop::Order.human_attribute_name(:billing_country)
  
        .filter-form-control
          .input-group
            .select-dropdown= ff.select :billing_country_id, options_for_select(Spina::Shop::Country.pluck(:name, :id), params.dig(:advanced_filters, :billing_country_id)), {include_blank: "Alle landen"}, class: '', style: 'width: 100%'
            
      .filter-form-advanced-group
        .filter-form-label Status
  
        .filter-form-control
          .input-group
            .select-dropdown= ff.select :current_state, options_for_select([["Bestelling", "received"], ["Betaald", "paid"], ["Voorbereiden", "preparing"], ["Verzonden", "shipped"], ["Gereed voor ophalen", "ready_for_pickup"], ["Opgehaald", "picked_up"], ["Afgeleverd", "delivered"], ["Mislukt", "failed"], ["Geannuleerd", "cancelled"], ["Gecrediteerd", "refunded"]], params.dig(:advanced_filters, :current_state)), {include_blank: "Alle statussen"}, class: '', style: 'width: 100%'
            
      .filter-form-advanced-group
        .filter-form-label Sorteren
  
        .filter-form-control
          .input-group
            .select-dropdown= ff.select :order, options_for_select([["Ordernummer oplopend", "order_number"]], params.dig(:advanced_filters, :order)), {include_blank: "Ordernummer aflopend"}, class: '', style: 'width: 100%'
            
      .filter-form-advanced-group
        .filter-form-label= Spina::Shop::Order.human_attribute_name(:discount)
  
        .filter-form-control
          .input-group
            .select-dropdown= ff.select :discount_id, options_for_select(Spina::Shop::Discount.multiple_use.pluck(:code, :id), params.dig(:advanced_filters, :discount_id)), {include_blank: "â€“"}, class: '', style: 'width: 100%'

      .filter-form-advanced-group
        .filter-form-label= Spina::Shop::Order.human_attribute_name(:received_at)

        .filter-form-control
          .input-group
            = ff.text_field :received_at_gteq, value: params.dig(:advanced_filters, :received_at_gteq), placeholder: 'min', class: 'datepicker'
            = ff.text_field :received_at_lteq, value: params.dig(:advanced_filters, :received_at_lteq), placeholder: 'max', class: 'datepicker'

      .filter-form-advanced-group
        .filter-form-label= t("spina.shop.orders.online_or_offline_orders")

        .filter-form-control
          .input-group
            .select-dropdown= ff.select :pos, options_for_select([[t("spina.shop.orders.offline_orders_only"), true], [t("spina.shop.orders.online_orders_only"), false]], params.dig(:advanced_filters, :pos)), {include_blank: t("spina.shop.orders.online_and_offline_orders")}, class: '', style: "width: 100%"
            
      .filter-form-advanced-group
        .filter-form-label Verzendmethode
        
        .filter-form-control
          .input-group
            .select-dropdown= ff.select :delivery_option_id, options_for_select(Spina::Shop::DeliveryOption.pluck(:name, :id), params.dig(:advanced_filters, :delivery_option_id)), {include_blank: "Alle verzendmethoden"}, class: '', style: "width: 100%"

= form_with url: spina.shop_admin_orders_batch_path, local: true do
  .pull-right{style: 'display: inline-block; position: fixed; top: 78px; right: 22px; z-index: 10', data: {dropdown: true}}
    = link_to '#', class: 'button button-link', data: {trigger: 'dropdown', target: '#actions'} do
      =t 'spina.shop.orders.actions'
      %i.icon.icon-caret-down{style: 'margin-right: 0'}

    %ul#actions.align-right
      %li= button_tag t('spina.shop.orders.start_preparing_html'), type: :submit, name: 'batch_action', value: 'start_preparing'
      %li= button_tag t('spina.shop.orders.ship_order_html'), type: :submit, name: 'batch_action', value: 'start_shipping'
      %li.divider
      %li= button_tag t('spina.shop.orders.start_preparing_and_ship_html'), type: :submit, name: 'batch_action', value: 'start_preparing_and_shipping'
      %li.divider
      %li= button_tag t('spina.shop.orders.download_attachments_html'), type: :submit, name: 'batch_action', value: 'download_attachments'

  .table-container.infinite-table
    %table.table.table-clickable
      %thead
        %tr
          %th
          - if Spina::Shop::Store.many?
            %th
          %th= Spina::Shop::Order.human_attribute_name(:order_number)
          %th= Spina::Shop::Order.human_attribute_name(:billing_country)
          %th= Spina::Shop::Customer.model_name.human
          %th= Spina::Shop::Order.human_attribute_name(:received_at)
          %th= Spina::Shop::Order.human_attribute_name(:delivery_option)
          %th.nowrap= Spina::Shop::Order.human_attribute_name(:shipped_at)
          %th.text-right= Spina::Shop::Order.human_attribute_name(:total)
          %th

      %tbody
        - if @orders.any?
          = render partial: 'order', collection: @orders.to_a.uniq
        - else
          %tr
            %td{colspan: 8}
              %p.text-center
                %em.text-muted= 'spina.shop.orders.no_orders'

    .pagination= link_to_next_page @orders, "Next"
